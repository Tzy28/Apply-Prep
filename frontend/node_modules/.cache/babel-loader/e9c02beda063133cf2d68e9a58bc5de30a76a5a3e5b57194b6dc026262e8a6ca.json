{"ast":null,"code":"var _jsxFileName = \"/Users/ryantu/PycharmProjects/easyapply-web/frontend/src/pages/PersonalStatementPolishing.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PersonalStatementPolishing() {\n  _s();\n  const [formData, setFormData] = useState({\n    personalStatement: ''\n  });\n  const [polishedPS, setPolishedPS] = useState('');\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:5001/ps_polish', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      const data = await response.json();\n      setPolishedPS(data.polished_statement);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Personal Statement Polishing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Paste Your Personal Statement Here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"personalStatement\",\n          className: \"form-control\",\n          value: formData.personalStatement,\n          onChange: handleChange,\n          rows: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Polish My Statement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), polishedPS && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Polished Personal Statement:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"border p-3\",\n        children: polishedPS\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(PersonalStatementPolishing, \"0uB3XI7cM3EXMbxPd1YZ3FglVzs=\");\n_c = PersonalStatementPolishing;\nexport default PersonalStatementPolishing;\nvar _c;\n$RefreshReg$(_c, \"PersonalStatementPolishing\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PersonalStatementPolishing","_s","formData","setFormData","personalStatement","polishedPS","setPolishedPS","handleChange","e","name","value","target","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","polished_statement","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","className","onChange","rows","type","_c","$RefreshReg$"],"sources":["/Users/ryantu/PycharmProjects/easyapply-web/frontend/src/pages/PersonalStatementPolishing.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction PersonalStatementPolishing() {\n  const [formData, setFormData] = useState({ personalStatement: '' });\n  const [polishedPS, setPolishedPS] = useState('');\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({ ...formData, [name]: value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:5001/ps_polish', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(formData)\n      });\n      const data = await response.json();\n      setPolishedPS(data.polished_statement);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Personal Statement Polishing</h2>\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label>Paste Your Personal Statement Here</label>\n          <textarea name=\"personalStatement\" className=\"form-control\" value={formData.personalStatement} onChange={handleChange} rows=\"10\"></textarea>\n        </div>\n        <button type=\"submit\" className=\"btn btn-primary\">Polish My Statement</button>\n      </form>\n      {polishedPS && (\n        <div className=\"mt-5\">\n          <h3>Polished Personal Statement:</h3>\n          <p className=\"border p-3\">{polishedPS}</p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default PersonalStatementPolishing;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}